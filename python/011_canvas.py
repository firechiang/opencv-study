'''
绘画（画线）
'''

import cv2
import numpy as np

if __name__ == "__main__":

    # 创建一副图像，行的像素个数480，列的像素个数640，通道数/层数3，每一个元素的类型是uint8值是0
    img = np.zeros((480,640,3),np.uint8)
    # 画线（(10,20)起点坐标，(300,400)终点坐标，(0,0,255)线的颜色，1表示线的宽度（非必传），4表示线的平滑度（锯齿度，非必传，取值 4，8，16））
    cv2.line(img,(10,20),(10,400),(0,0,255),1,4)

    # 画矩形（(10,10)左上角坐标，(200,200)右下角坐标，(0,0,255)颜色，1表示非实心，-1表示实心）
    cv2.rectangle(img,(10,10),(50,50),(0,0,255),1)

    # 画圆（(320,240)圆心坐标，100半径，,(0,0,255)颜色，1表示非实心，-1表示实心）
    cv2.circle(img,(320,240),100,(0,0,255),1)

    # 画椭圆（(100,400)中心点，(100,50)长宽的一半，0角度，从0度开始，到360角度结束，(0,0,255)颜色，1表示非实心，-1表示实心）
    cv2.ellipse(img,(320,240),(100,50),0,0,360,(0,0,255),1)
    cv2.ellipse(img, (320, 240), (100, 50), 90, 0, 360, (0, 0, 255), 1)
    cv2.ellipse(img, (320, 240), (100, 50), 90, 0, 90, (0, 0, 255), -1)

    # (300,10) 顶点坐标吗，(150,100)左边角坐标，(450,100)右边角坐标，数据类型是int32
    pts = np.array([(300,10),(150,100),(450,100)],np.int32)
    # 画多变形（pts 点集（就是多变形各个角的坐标，数据类型一定要是有符号32位的）,True是否闭环，(0,0,255)颜色，1表示线的宽度（非必传））
    cv2.polylines(img,[pts],True,(0,0,255),1)
    #填充多边形
    #cv2.fillPoly(img,[pts],(0,255,0))

    # 绘制文本（(50,400)绘制开始坐标，cv2.FONT_HERSHEY_SIMPLEX 字体，1 字大小，(255,0,0)颜色）
    cv2.putText(img,"jiang",(50,400),cv2.FONT_HERSHEY_SIMPLEX,1,(255,0,0))

    # 显示图像窗口
    cv2.imshow("img",img)

    # 窗口显示多长时候后窗口自动关闭，如果不调用该函数窗口创建后会立即自动关闭（waitKey表示在等待的过程当中可以接收鼠标和键盘事件； 0 表示无限等待）
    key = cv2.waitKey(0)
    # 如果按了q键就退出（ord函数获取q键的Ascii码）
    if key & 0xFF == ord("q"):
        # 退出
        #exit()
        # 释放所有资源并且自动退出
        cv2.destroyAllWindows()